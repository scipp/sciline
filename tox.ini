[tox]
envlist = py310,dask
isolated_build = true

[testenv]
deps = -r requirements/test.txt
setenv =
  JUPYTER_PLATFORM_DIRS = 1
commands = pytest {posargs}

[testenv:dask]
deps = -r requirements/test-dask.txt
setenv =
  JUPYTER_PLATFORM_DIRS = 1
commands = pytest

[testenv:nightly]
deps = -r requirements/nightly.txt
commands = pytest {posargs}

[testenv:unpinned]
description = Test with unpinned dependencies, as a user would install now.
deps =
  -r requirements/basetest.txt
  sciline
commands = pytest {posargs}

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = -r requirements/docs.txt
allowlist_externals=find
commands = python -m sphinx -j2 -v -b html -d {toxworkdir}/docs_doctrees docs html
           python -m sphinx -j2 -v -b doctest -d {toxworkdir}/docs_doctrees docs html
           find html -type f -name "*.ipynb" -not -path "html/_sources/*" -delete

[testenv:releasedocs]
description = invoke sphinx-build to build the HTML docs from a released version
skip_install = true
deps =
  sciline=={posargs}
  {[testenv:docs]deps}
allowlist_externals={[testenv:docs]allowlist_externals}
commands = {[testenv:docs]commands}

[testenv:linkcheck]
description = Run Sphinx linkcheck
deps = -r requirements/docs.txt
commands = python -m sphinx -j2 -v -b linkcheck -d {toxworkdir}/docs_doctrees docs html

[testenv:static]
description = Code formatting and static analysis
skip_install = true
deps = -r requirements/static.txt
allowlist_externals = sh
# The first run of pre-commit may reformat files. If this happens, it returns 1 but this
# should not fail the job. So just run again if it fails. A second failure means that
# either the different formatters can't agree on a format or that static analysis failed.
commands = sh -c 'pre-commit run -a || (echo "" && pre-commit run -a)'

[testenv:mypy]
description = Type checking (mypy)
deps = -r requirements/mypy.txt
commands = python -m mypy .

[testenv:deps]
description = Update dependencies by running pip-compile-multi
deps =
  pip-compile-multi
  tomli
skip_install = true
changedir = requirements
commands = python ./make_base.py --nightly cyclebane
           pip-compile-multi -d . --backtracking
